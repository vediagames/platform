type Query {
    mostPlayedGames(request: MostPlayedGamesRequest!): MostPlayedGamesResponse!
    freshGames(request: FreshGamesRequest!): FreshGamesResponse!
    games(request: GamesRequest!): GamesResponse!
    game(request: GameRequest!): GameResponse!

    trendingGames(language: Language!): [ListGame!]!
    mostPlayedGame(language: Language!): ListGame!
    popularGames(language: Language!): [ListGame!]!
    pickedByEditor(language: Language!): ListGame!

    categories(request: CategoriesRequest!): CategoriesResponse!
    category(request: CategoryRequest!): CategoryResponse!

    tags(request: TagsRequest!): TagsResponse!
    tag(request: TagRequest!): TagResponse!

    sections(request: SectionsRequest!): SectionsResponse!
    section(request: SectionRequest!): SectionResponse!
    placedSections(request: PlacedSectionsRequest!): PlacedSectionsResponse!

    search(request: SearchRequest!): SearchResponse!
    fullSearch(request: FullSearchRequest!): SearchResponse!

    randomProviderGame: RandomProviderGameResponse
    availableLanguages: AvailableLanguagesResponse!

    promotedTags(language: Language!): [PromotedTag!]!
    topTags(language: Language!): TagsResponse!
    whatOthersPlay(language: Language!): GamesResponse!
    quote(language: Language!): Quote!
}

type Mutation {
    sendEmail(request: SendEmailRequest!): Boolean!
    createGame(request: CreateGameRequest!): CreateGameResponse!
    updateGame(request: UpdateGameRequest!): UpdateGameResponse!
    deleteGame(request: DeleteGameRequest!): Boolean!
}

type TopTag {
    id: Int!
    slug: String!
    name: String!
    thumbnail: String!
    category: String!
}

type PromotedTag {
    id: Int!
    slug: String!
    name: String!
    icon: String!
    thumbnail: String!
}

type ListGame {
    game: Game!
    label: String
    description: String
}

type Quote {
    message: String!
    author: String!
    expiresAt: String!
}

input UpdateGameRequest {
    id: Int!
    slug: String!
    mobile: Boolean!
    tags: [Int!]!
    categories: [Int!]!
    status: Status!
    url: String!
    width: Int!
    height: Int!
    likes: Int!
    dislikes: Int!
    plays: Int!
    weight: Int!
    name: String!
    shortDescription: String!
    description: String!
    player1Controls: String!
    content: String
    player2Controls: String
}

type UpdateGameResponse {
    game: Game!
}

input DeleteGameRequest {
    slug: String
    id: Int
}

input CreateGameRequest {
    slug: String!
    mobile: Boolean!
    tags: [Int!]!
    categories: [Int!]!
    status: Status!
    url: String!
    width: Int!
    height: Int!
    weight: Int!
    name: String!
    shortDescription: String!
    description: String!
    player1Controls: String!
    content: String
    player2Controls: String
}

type CreateGameResponse {
    game: Game!
}

input MostPlayedGamesRequest {
    language: Language!
    page: Int!
    limit: Int!
    maxDays: Int!
}

type MostPlayedGamesResponse {
    games: Games!
}

input FreshGamesRequest {
    language: Language!
    page: Int!
    limit: Int!
    maxDays: Int!
}

type FreshGamesResponse {
    games: Games!
}

input GamesRequest {
    language: Language!
    page: Int!
    limit: Int!
    allowDeleted: Boolean!
    allowInvisible: Boolean!
    sort: SortingMethod
    categories: [Int!]
    tags: [Int!]
    ids: [Int!]
    excludedGameIDs: [Int!]
}

type GamesResponse {
    games: Games!
}

input GameRequest {
    field: GetByField!
    value: String!
    language: Language!
}

type GameResponse {
    game: Game!
}

input CategoriesRequest {
    language: Language!
    page: Int!
    limit: Int!
    allowDeleted: Boolean!
    allowInvisible: Boolean!
}

type CategoriesResponse {
    categories: Categories!
}

input CategoryRequest {
    field: GetByField!
    value: String!
    language: Language!
}

type CategoryResponse {
    category: Category!
}

input TagsRequest {
    language: Language!
    page: Int!
    limit: Int!
    allowDeleted: Boolean!
    allowInvisible: Boolean!
    sort: SortingMethod
}

type TagsResponse {
    tags: Tags!
}

input TagRequest {
    field: GetByField!
    value: String!
    language: Language!
}

type TagResponse {
    tag: Tag!
}

input SectionsRequest {
    language: Language!
    page: Int!
    limit: Int!
    allowDeleted: Boolean!
    allowInvisible: Boolean!
}

type SectionsResponse {
    sections: Sections!
}

input SectionRequest {
    field: GetByField!
    value: String!
    language: Language!
}

type SectionResponse {
    section: Section!
}

input PlacedSectionsRequest {
    language: Language!
}

type PlacedSectionsResponse {
    placedSections: PlacedSections!
}

input SearchRequest {
    language: Language!
    query: String!
    maxGames: Int!
    maxTags: Int!
    allowDeleted: Boolean!
    allowInvisible: Boolean!
}

type SearchResponse {
    searchItems: SearchItems
}

input FullSearchRequest {
    language: Language!
    query: String!
    page: Int!
    limit: Int!
    sort: SortingMethod
    allowDeleted: Boolean!
    allowInvisible: Boolean!
}

type RandomProviderGameResponse {
    name: String!
    url: String!
    description: String!
    controls: String!
    mobile: Boolean!
    height: Int!
    width: Int!
    categories: [String!]!
    tags: [String!]!
    images: [String!]!
}

type AvailableLanguagesResponse {
    Languages: [AvailableLanguage!]
}

input SendEmailRequest {
    from: String!
    name: String!
    subject: String!
    body: String!
}
