// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"github.com/vediagames/platform/gateway/graphql/model"
)

type GetCategoriesPageRequest struct {
	Language model.Language `json:"language"`
}

type GetCategoriesPageResponse struct {
	Categories *model.Categories `json:"categories"`
}

type GetCategoryPageRequest struct {
	Language model.Language `json:"language"`
	Slug     string         `json:"slug"`
	ID       int            `json:"id"`
}

type GetCategoryPageResponse struct {
	Category          *model.Category    `json:"category"`
	FirstSectionGames *model.Games       `json:"firstSectionGames"`
	TagSections       *model.TagSections `json:"tagSections"`
	Tags              *model.Tags        `json:"tags"`
	OtherGames        *model.Games       `json:"otherGames"`
}

type GetContinuePlayingPageRequest struct {
	LastPlayedGameIDs []int          `json:"lastPlayedGameIDs"`
	Page              int            `json:"page"`
	Language          model.Language `json:"language"`
}

type GetContinuePlayingPageResponse struct {
	Games *model.Games `json:"games"`
}

type GetFilterPageRequest struct {
	CategoryIDs []int                `json:"categoryIDs,omitempty"`
	Sort        *model.SortingMethod `json:"sort,omitempty"`
	TagIDs      []int                `json:"tagIDs,omitempty"`
	GameIDs     []int                `json:"gameIDs,omitempty"`
	Page        int                  `json:"page"`
	Language    model.Language       `json:"language"`
}

type GetFilterPageResponse struct {
	Games *model.Games `json:"games"`
}

type GetGamePageRequest struct {
	Language          model.Language `json:"language"`
	Slug              string         `json:"slug"`
	LastPlayedGameIDs []*int         `json:"lastPlayedGameIDs,omitempty"`
	LikedGameIDs      []*int         `json:"likedGameIDs,omitempty"`
	DislikedGameIDs   []*int         `json:"dislikedGameIDs,omitempty"`
}

type GetGamePageResponse struct {
	Game       *model.Game  `json:"game"`
	OtherGames *model.Games `json:"otherGames"`
	IsLiked    bool         `json:"isLiked"`
	IsDisliked bool         `json:"isDisliked"`
}

type GetHomePageRequest struct {
	Language          model.Language `json:"language"`
	LastPlayedGameIDs []int          `json:"lastPlayedGameIDs,omitempty"`
}

type GetHomePageResponse struct {
	TotalGames                 int                   `json:"totalGames"`
	TotalGamesAddedInLast7Days int                   `json:"totalGamesAddedInLast7Days"`
	MostPlayedGamesInLast7Days *model.Games          `json:"mostPlayedGamesInLast7Days"`
	GamesAddedInLast7Days      *model.Games          `json:"gamesAddedInLast7Days"`
	MostPlayedGames            *model.Games          `json:"mostPlayedGames"`
	Sections                   *model.PlacedSections `json:"sections"`
	TagSections                *model.TagSections    `json:"tagSections"`
}

type GetSearchPageRequest struct {
	Language model.Language       `json:"language"`
	Query    string               `json:"query"`
	Page     int                  `json:"page"`
	Sort     *model.SortingMethod `json:"sort,omitempty"`
}

type GetSearchPageResponse struct {
	Items        *model.SearchItems `json:"items"`
	ShowingRange string             `json:"showingRange"`
}

type GetSiteMapPageRequest struct {
	Language model.Language `json:"language"`
}

type GetSiteMapPageResponse struct {
	Categories *model.Categories `json:"categories"`
}

type GetTagPageRequest struct {
	Language model.Language `json:"language"`
	TagID    int            `json:"tagID"`
	Page     int            `json:"page"`
}

type GetTagPageResponse struct {
	Tag   *model.Tag   `json:"tag"`
	Games *model.Games `json:"games"`
}

type GetTagsPageRequest struct {
	Language model.Language `json:"language"`
	Page     int            `json:"page"`
}

type GetTagsPageResponse struct {
	Tags *model.Tags `json:"tags"`
}

type GetWizardPageRequest struct {
	Language    model.Language `json:"language"`
	CategoryIDs []int          `json:"categoryIDs"`
}

type GetWizardPageResponse struct {
	Categories *model.Categories `json:"categories"`
	Games      *model.Games      `json:"games"`
}
